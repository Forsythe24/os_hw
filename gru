#! /usr/bin/python3

import os
import sys
import random

num_processes = int(sys.argv[1])
main_pid = os.getpid()
process_list = []

def child_process(track=True):
    fork_result = os.fork()
    if fork_result == 0:
        current_pid = os.getpid()
        print(f'Gru[{main_pid}]: process created. PID {current_pid}.', flush=True)
        delay = random.randint(5, 10)
        os.execve('./minion', ['./minion', str(delay)], os.environ)
    else:
        if track:
            process_list.append(fork_result)

for _ in range(num_processes):
    child_process(track=True)

for child_pid in process_list:
    exit_code = 1
    while exit_code != 0:
    finished_pid, status_code = os.wait()
    exit_code = status_code >> 8
    print(f'Gru[{main_pid}]: process terminated. PID {finished_pid}. Exit status {status_code}.', flush=True)
    if exit_code != 0:
        child_process(track=False)

    
